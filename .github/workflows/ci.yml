---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  ok:
    if: failure()
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - run: exit 1
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup workspace
        run: go work init ./ ./nagayatesting
      - name: lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: '--config=.golangci.yml ./...'
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true
  test:
    permissions:
      actions: read
      contents: read
      pull-requests: write
    services:
      mysql:
        image: 'mysql:9.2.0'
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: tenant_default
        ports:
          - '3306/tcp'
    strategy:
      matrix:
        go_version:
          - stable
          - oldstable
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
          cache-dependency-path: '**/go.sum'
      - name: wait DB
        timeout-minutes: 2
        run: |
          while ! mysql -uroot -h 127.0.0.1 -P ${port} -e 'select 1' >/dev/null; do
            sleep 1
          done
        env:
          port: ${{ job.services.mysql.ports[3306] }}
      - name: setup db
        run: |
          echo "TEST_DB_DSN=root@tcp(127.0.0.1:${port})/tenant_default" >> "$GITHUB_ENV"
          mysql -uroot -h 127.0.0.1 -P ${port} tenant_default < ./testdata/ddl.sql
        env:
          port: ${{ job.services.mysql.ports[3306] }}
      - name: setup workspace
        run: go work init ./ ./nagayatesting
      - name: test
        run: go test -race -coverprofile=cover.out -covermode=atomic ./...
      - uses: k1LoW/octocov-action@v1
        if: ${{ matrix.go_version == 'stable' }}
